{"ast":null,"code":"import _classCallCheck from\"/Users/nicole/Desktop/dust/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nicole/Desktop/dust/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/nicole/Desktop/dust/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/nicole/Desktop/dust/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nicole/Desktop/dust/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{YMaps,Map,Clusterer,Placemark}from\"react-yandex-maps\";import{points,gradientColors}from\"./data\";import{jsx as _jsx}from\"react/jsx-runtime\";var mapState={center:[51.494333,45.720466],zoom:15,behaviors:[\"default\",\"scrollZoom\"]};var getPointData=function getPointData(index){return{balloonContentBody:\"placemark <strong>balloon \"+index+\"</strong>\",clusterCaption:\"placemark <strong>\"+index+\"</strong>\"};};var getPointOptions=function getPointOptions(){return{preset:\"islands#violetIcon\",iconColor:getRandomColor()};};function getRandomColor(){return gradientColors[Math.floor(Math.random()*gradientColors.length)];}var ClustererCreate=/*#__PURE__*/function(_React$Component){_inherits(ClustererCreate,_React$Component);var _super=_createSuper(ClustererCreate);function ClustererCreate(props){var _this;_classCallCheck(this,ClustererCreate);_this=_super.call(this,props);_this.changeSomething=function(){_this.setState({some:1});};_this.changeSomething=_this.changeSomething.bind(_assertThisInitialized(_this));_this.state={some:0};return _this;}_createClass(ClustererCreate,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(YMaps,{children:/*#__PURE__*/_jsx(Map,{state:mapState,width:\"100%\",height:\"500px\",modules:[\"package.full\"],children:/*#__PURE__*/_jsx(Clusterer,{options:{clusterIconLayout:\"default#pieChart\",clusterIconPieChartRadius:25,clusterIconPieChartCoreRadius:10,clusterIconPieChartStrokeWidth:1,clusterDisableClickZoom:true,clusterHideIconOnBalloonOpen:false,geoObjectHideIconOnBalloonOpen:false},children:points.map(function(points,idx){return/*#__PURE__*/_jsx(Placemark,{geometry:points,properties:getPointData(idx),options:getPointOptions()},idx);})})})})});}}]);return ClustererCreate;}(React.Component);export default ClustererCreate;","map":{"version":3,"sources":["/Users/nicole/Desktop/dust/src/Components/YMap.js"],"names":["React","YMaps","Map","Clusterer","Placemark","points","gradientColors","mapState","center","zoom","behaviors","getPointData","index","balloonContentBody","clusterCaption","getPointOptions","preset","iconColor","getRandomColor","Math","floor","random","length","ClustererCreate","props","changeSomething","setState","some","bind","state","clusterIconLayout","clusterIconPieChartRadius","clusterIconPieChartCoreRadius","clusterIconPieChartStrokeWidth","clusterDisableClickZoom","clusterHideIconOnBalloonOpen","geoObjectHideIconOnBalloonOpen","map","idx","Component"],"mappings":"qtBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,GAAhB,CAAqBC,SAArB,CAAgCC,SAAhC,KAAiD,mBAAjD,CAEA,OAASC,MAAT,CAAiBC,cAAjB,KAAuC,QAAvC,C,2CAEA,GAAMC,CAAAA,QAAQ,CAAG,CACfC,MAAM,CAAE,CAAC,SAAD,CAAY,SAAZ,CADO,CAEfC,IAAI,CAAE,EAFS,CAGfC,SAAS,CAAE,CAAC,SAAD,CAAY,YAAZ,CAHI,CAAjB,CAMA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,KAAK,CAAI,CAC5B,MAAO,CACLC,kBAAkB,CAAE,6BAA+BD,KAA/B,CAAuC,WADtD,CAELE,cAAc,CAAE,qBAAuBF,KAAvB,CAA+B,WAF1C,CAAP,CAID,CALD,CAOA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5B,MAAO,CACLC,MAAM,CAAE,oBADH,CAELC,SAAS,CAAEC,cAAc,EAFpB,CAAP,CAID,CALD,CAOA,QAASA,CAAAA,cAAT,EAA0B,CACxB,MAAOZ,CAAAA,cAAc,CAACa,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBf,cAAc,CAACgB,MAA1C,CAAD,CAArB,CACD,C,GAEKC,CAAAA,e,8HACJ,yBAAYC,KAAZ,CAAmB,iDACjB,uBAAMA,KAAN,EADiB,MAQnBC,eARmB,CAQD,UAAM,CACtB,MAAKC,QAAL,CAAc,CAAEC,IAAI,CAAE,CAAR,CAAd,EACD,CAVkB,CAEjB,MAAKF,eAAL,CAAuB,MAAKA,eAAL,CAAqBG,IAArB,+BAAvB,CACA,MAAKC,KAAL,CAAa,CACXF,IAAI,CAAE,CADK,CAAb,CAHiB,aAMlB,C,kDAMD,iBAAS,CACP,mBACE,kCACE,KAAC,KAAD,wBACE,KAAC,GAAD,EACE,KAAK,CAAEpB,QADT,CAEE,KAAK,CAAC,MAFR,CAGE,MAAM,CAAC,OAHT,CAIE,OAAO,CAAE,CAAC,cAAD,CAJX,uBAME,KAAC,SAAD,EACE,OAAO,CAAE,CACPuB,iBAAiB,CAAE,kBADZ,CAEPC,yBAAyB,CAAE,EAFpB,CAGPC,6BAA6B,CAAE,EAHxB,CAIPC,8BAA8B,CAAE,CAJzB,CAKPC,uBAAuB,CAAE,IALlB,CAMPC,4BAA4B,CAAE,KANvB,CAOPC,8BAA8B,CAAE,KAPzB,CADX,UAWG/B,MAAM,CAACgC,GAAP,CAAW,SAAChC,MAAD,CAASiC,GAAT,qBACV,KAAC,SAAD,EAEE,QAAQ,CAAEjC,MAFZ,CAGE,UAAU,CAAEM,YAAY,CAAC2B,GAAD,CAH1B,CAIE,OAAO,CAAEvB,eAAe,EAJ1B,EACOuB,GADP,CADU,EAAX,CAXH,EANF,EADF,EADF,EADF,CAkCD,C,6BAhD2BtC,KAAK,CAACuC,S,EAmDpC,cAAehB,CAAAA,eAAf","sourcesContent":["import React from \"react\";\nimport { YMaps, Map, Clusterer, Placemark } from \"react-yandex-maps\";\n\nimport { points, gradientColors } from \"./data\";\n\nconst mapState = {\n  center: [51.494333, 45.720466],\n  zoom: 15,\n  behaviors: [\"default\", \"scrollZoom\"]\n};\n\nconst getPointData = index => {\n  return {\n    balloonContentBody: \"placemark <strong>balloon \" + index + \"</strong>\",\n    clusterCaption: \"placemark <strong>\" + index + \"</strong>\"\n  };\n};\n\nconst getPointOptions = () => {\n  return {\n    preset: \"islands#violetIcon\",\n    iconColor: getRandomColor()\n  };\n};\n\nfunction getRandomColor() {\n  return gradientColors[Math.floor(Math.random() * gradientColors.length)];\n}\n\nclass ClustererCreate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.changeSomething = this.changeSomething.bind(this);\n    this.state = {\n      some: 0\n    };\n  }\n\n  changeSomething = () => {\n    this.setState({ some: 1 });\n  };\n\n  render() {\n    return (\n      <div>\n        <YMaps>\n          <Map\n            state={mapState}\n            width=\"100%\"\n            height=\"500px\"\n            modules={[\"package.full\"]}\n          >\n            <Clusterer\n              options={{\n                clusterIconLayout: \"default#pieChart\",\n                clusterIconPieChartRadius: 25,\n                clusterIconPieChartCoreRadius: 10,\n                clusterIconPieChartStrokeWidth: 1,\n                clusterDisableClickZoom: true,\n                clusterHideIconOnBalloonOpen: false,\n                geoObjectHideIconOnBalloonOpen: false\n              }}\n            >\n              {points.map((points, idx) => (\n                <Placemark\n                  key={idx}\n                  geometry={points}\n                  properties={getPointData(idx)}\n                  options={getPointOptions()}\n                />\n              ))}\n            </Clusterer>\n          </Map>\n        </YMaps>\n\n      </div>\n    );\n  }\n}\n\nexport default ClustererCreate;\n"]},"metadata":{},"sourceType":"module"}